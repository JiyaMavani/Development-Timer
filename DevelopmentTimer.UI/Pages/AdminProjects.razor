@page "/admin/projects"
@layout AdminLayout
@inject HttpClient Http
@inject NavigationManager NavManager
@using MudBlazor
@using DevelopmentTimer.DAL.Entities
@using DevelopmentTimer.DAL.Enums
@using DevelopmentTimer.BAL.DTOs.ProjectDTO

<style>
    .title {
        text-align: center;
        color: black;
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    .project-table-container {
        margin-top: 20px;
        border-radius: 10px;
        background-color: #ffffff;
        overflow-x: auto;
        padding: 10px;
        max-width: 100%; 
        box-sizing: border-box;
    }

    .custom-table table {
        width: 100%;
        border-collapse: collapse;
        table-layout: auto;
        min-width: 0; 
    }

    .custom-table .table-header {
        background-color: #c7d59f;
        color: #212121;
        font-weight: bold;
        text-align: center;
        padding: 10px 6px;
        border: 1px solid black;
        font-size: 1.5rem;
        cursor: pointer;
        white-space: normal; 
        min-width: 80px; 
    }

    .custom-table .table-cell {
        text-align: center;
        font-size: 1rem;
        padding: 8px 4px;
        border: 1px solid black;
        white-space: normal;
        min-width: 80px;
    }

    .custom-table tbody tr:hover {
        background-color: rgba(25, 118, 210, 0.1);
        cursor: pointer;
    }

    .custom-table tbody tr:nth-of-type(odd) {
        background-color: #f8f9fa;
    }

    .custom-pager {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 15px;
        gap: 5px;
        flex-wrap: wrap;
        font-size: 0.9rem;
    }

    .custom-pager .mud-button-root {
        background-color: #1976d2;
        color: white;
        border-radius: 5px;
        min-width: 35px;
        min-height: 35px;
        transition: background-color 0.3s, transform 0.2s;
        font-size: 0.9rem;
        padding: 0 8px;
    }

    .custom-pager .mud-button-root:hover {
        background-color: #115293;
        transform: scale(1.05);
    }

    .custom-pager .mud-select {
        min-width: 60px;
    }

    .custom-pager .mud-button-root.mud-selected {
        background-color: #4caf50;
        color: white;
        font-weight: bold;
    }

    .mud-button-root {
        border: 2px solid black;
    }

    .custom-pagerange, .custom-rowsperpage {
        margin: 15px 10px;
    }

    .custom-pager .mud-button-root.mud-icon-button {
        background-color: #1976d2;
        color: white;
        border-radius: 50%;
        min-width: 35px;
        min-height: 35px;
        font-size: 0.9rem;
    }

    .custom-pager .mud-button-root.mud-icon-button:hover {
        background-color: #115293;
        transform: scale(1.1);
    }

    .custom-dropdown {
        padding: 4px 8px;
        font-size: 0.9rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #fff;
        color: #212121;
        outline: none;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

    .custom-dropdown:hover {
        border-color: #1976d2;
    }

    .custom-dropdown:focus {
        border-color: #1976d2;
        box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.2);
    }

    @@media (max-width: 336px) {
        .title {
            font-size: 1rem;
            margin-bottom: 0.2rem;
        }

        .project-table-container {
            margin-top: 5px;
            padding: 2px;
            margin-left: 0;
            margin-right: 0;
        }

        .custom-table table {
            width: 100%;
            min-width: 0;
        }

        .custom-table .table-header,
        .custom-table .table-cell {
            font-size: 0.6rem;
            padding: 2px 1px;
            min-width: 60px;
            white-space: normal;
        }

        .custom-pager {
            flex-direction: column;
            gap: 3px;
            font-size: 0.6rem;
        }

        .custom-pager .mud-button-root {
            min-width: 20px;
            min-height: 20px;
            font-size: 0.6rem;
            padding: 0 4px;
        }

        .custom-pager .mud-button-root.mud-icon-button {
            min-width: 20px;
            min-height: 20px;
        }

        .custom-dropdown {
            padding: 1px 3px;
            font-size: 0.5rem;
        }

        .mud-button-root {
            font-size: 0.6rem;
            padding: 2px 4px;
        }

    }

    @@media (min-width: 337px) and (max-width: 576px) {
        .title {
            font-size: 1.2rem;
            margin-bottom: 0.3rem;
        }

        .project-table-container {
            margin-top: 8px;
            padding: 3px;
            margin-left: 0;
            margin-right: 0;
        }

        .custom-table table {
            width: 100%;
            min-width: 0;
        }

        .custom-table .table-header {
            font-size: 0.8rem;
            padding: 3px 2px;
            min-width: 70px;
        }

        .custom-table .table-cell {
            font-size: 0.7rem;
            padding: 2px 1px;
            min-width: 70px;
        }

        .custom-pager {
            flex-direction: column;
            gap: 5px;
        }

        .custom-pager .mud-button-root {
            min-width: 25px;
            min-height: 25px;
            font-size: 0.7rem;
            padding: 0 5px;
        }

        .custom-pager .mud-button-root.mud-icon-button {
            min-width: 25px;
            min-height: 25px;
        }

        .custom-dropdown {
            padding: 2px 4px;
            font-size: 0.6rem;
        }

        .mud-button-root {
            font-size: 0.7rem;
            padding: 3px 6px;
        }

    }

    @@media (min-width: 577px) and (max-width: 784px) {
        .title {
            font-size: 1.4rem;
        }

        .project-table-container {
            margin-top: 10px;
            padding: 5px;
            margin-left: 0; 
            margin-right: 0; 
            max-width: 100%; 
        }

        .custom-table table {
            width: 100%;
            min-width: 0;
        }

        .custom-table .table-header {
            font-size: 0.9rem;
            padding: 4px 2px;
            min-width: 80px;
        }

        .custom-table .table-cell {
            font-size: 0.8rem;
            padding: 3px 2px;
            min-width: 80px;
        }

        .custom-pager .mud-button-root {
            min-width: 30px;
            min-height: 30px;
            font-size: 0.8rem;
            padding: 0 6px;
        }

        .custom-pager .mud-button-root.mud-icon-button {
            min-width: 30px;
            min-height: 30px;
        }

        .custom-dropdown {
            padding: 3px 6px;
            font-size: 0.7rem;
        }

    }

    @@media (min-width: 785px) and (max-width: 1024px) {
            .title {
            font-size: 1.6rem;
        }

        .project-table-container {
            margin-top: 12px;
            padding: 8px;
            margin-left: 15px; 
            margin-right: 15px;
            max-width: calc(100% - 30px);
        }

        .custom-table .table-header {
            font-size: 1.1rem;
            padding: 6px 4px;
        }

        .custom-table .table-cell {
            font-size: 0.9rem;
            padding: 4px 2px;
        }

        .custom-pager .mud-button-root {
            min-width: 35px;
            min-height: 35px;
            font-size: 0.9rem;
            padding: 0 8px;
        }

        .custom-dropdown {
            padding: 4px 8px;
            font-size: 0.8rem;
        }

    }

    @@media (min-width: 1025px) {
        .title {
            font-size: 2rem;
        }

        .project-table-container {
            margin-top: 20px;
            padding: 10px;
            margin-left: 20px; 
            margin-right: 20px;
            max-width: calc(100% - 40px); 
        }

        .custom-table .table-header {
            font-size: 1.5rem;
            padding: 10px 6px;
        }

        .custom-table .table-cell {
            font-size: 1rem;
            padding: 8px 4px;
        }

    }
</style>

<MudText Typo="Typo.h2" Class="title mb-4">Projects</MudText>

<MudPaper Elevation="6" Class="p-2 project-table-container">
    @if (projects == null || !projects.Any())
    {
        <MudText Typo="Typo.h6" Class="text-center">
            Loading Projects...
        </MudText>
    }
    else
    {
        <MudTable T="ProjectReadDto" Items="PagedProjects" Hover="true" Bordered="true" Striped="true" Class="custom-table">
            <HeaderContent>
                <MudTh Class="table-header" @onclick="@(() => Sort("Name"))">Project Name</MudTh>
                <MudTh Class="table-header" @onclick="@(() => Sort("MaxHoursPerDay"))">Max Hours / Day</MudTh>
                <MudTh Class="table-header" @onclick="@(() => Sort("Status"))">Status</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd Class="table-cell">@context.Name</MudTd>
                <MudTd Class="table-cell">@context.MaxHoursPerDay</MudTd>
                <MudTd Class="table-cell">@context.Status</MudTd>
            </RowTemplate>
        </MudTable>
    }

    <MudButton Class="btn btn-success mt-3 border-0" Variant="Variant.Filled" OnClick="@(() => NavManager.NavigateTo("/admin/projects/addprojects"))">
        Add Projects
    </MudButton>

    <MudContainer class="custom-pager">
        <MudButton Class="mud-button-root" Variant="Variant.Filled" OnClick="() => CurrentPage = 1" Disabled="@(CurrentPage == 1)">First</MudButton>
        <MudButton Class="mud-button-root" Variant="Variant.Filled" OnClick="() => CurrentPage--" Disabled="@(CurrentPage == 1)">Previous</MudButton>
        <MudText Class="custom-pagerange">@GetPageRange()</MudText>
        <MudButton Class="mud-button-root" Variant="Variant.Filled" OnClick="() => CurrentPage++" Disabled="@(CurrentPage == TotalPages)">Next</MudButton>
        <MudButton Class="mud-button-root" Variant="Variant.Filled" OnClick="() => CurrentPage = TotalPages" Disabled="@(CurrentPage == TotalPages)">Last</MudButton>
        <MudText Class="custom-rowsperpage">Rows per page:</MudText>
        <select class="custom-dropdown" @onchange="ChangeRowsPerPage">
            <option value="5" selected="@(RowsPerPage == 5)">5</option>
            <option value="10" selected="@(RowsPerPage == 10)">10</option>
            <option value="20" selected="@(RowsPerPage == 20)">20</option>
        </select>
    </MudContainer>
</MudPaper>

@code {
    private List<ProjectReadDto> projects = new List<ProjectReadDto>();
    private string? errorMessage;
    private string? sortedColumn;
    private bool ascending = true;
    private int CurrentPage = 1;
    private int RowsPerPage = 5;

    private List<ProjectReadDto> PagedProjects => projects
        .Skip((CurrentPage - 1) * RowsPerPage)
        .Take(RowsPerPage)
        .ToList();

    private int TotalPages => (int)Math.Ceiling(projects.Count / (double)RowsPerPage);

    protected override async Task OnInitializedAsync()
    {
        await LoadProjects();
        StateHasChanged();
    }

    private async Task LoadProjects()
    {
        errorMessage = null;
        try
        {
            var result = await Http.GetFromJsonAsync<List<ProjectReadDto>>("https://localhost:7152/api/Project");
            if (result != null)
            {
                projects = result.ToList();
            }
            else
            {
                projects = new List<ProjectReadDto>();
                errorMessage = "No projects found.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading projects: {ex.Message}";
            projects = new List<ProjectReadDto>();
        }
    }

    private void Sort(string column)
    {
        if (sortedColumn == column)
            ascending = !ascending;
        else
        {
            sortedColumn = column;
            ascending = true;
        }

        var sortedProjects = column switch
        {
            "Name" => ascending
                ? projects.OrderBy(p => p.Name).ToList()
                : projects.OrderByDescending(p => p.Name).ToList(),
            "MaxHoursPerDay" => ascending
                ? projects.OrderBy(p => p.MaxHoursPerDay).ToList()
                : projects.OrderByDescending(p => p.MaxHoursPerDay).ToList(),
            "Status" => ascending
                ? projects.OrderBy(p => p.Status).ToList()
                : projects.OrderByDescending(p => p.Status).ToList(),
            _ => projects.ToList()
        };
        projects = sortedProjects;
        CurrentPage = 1;
        StateHasChanged();
    }

    private string GetPageRange()
    {
        if (projects.Count == 0) return "0 of 0";
        return $"{(CurrentPage - 1) * RowsPerPage + 1}-{Math.Min(CurrentPage * RowsPerPage, projects.Count)} of {projects.Count}";
    }

    private void ChangeRowsPerPage(ChangeEventArgs e)
    {
        RowsPerPage = int.Parse(e.Value.ToString());
        CurrentPage = 1;
        StateHasChanged();
    }
}