@page "/developer/timesheets/{DeveloperId:int}"
@layout DeveloperLayout
@inject HttpClient Http
@inject NavigationManager NavManager
@inject IJSRuntime JS
@using MudBlazor
@using DevelopmentTimer.BAL.DTOs.ProjectDTO
@using DevelopmentTimer.BAL.DTOs.TaskItemDTO

<style>
    .project-container {
        max-width: 900px;
        margin: 40px auto;
        padding: 20px;
        border-radius: 12px;
        background-color: #f9f9f9;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .project-heading {
        margin-top: -10px;
    }

    .project-grid {
        display: flex;
        gap: 10px;
        align-items: baseline;
        margin-bottom: 20px;
    }

    .project-dropdown {
        flex: 1;
        max-width: 400px;
        padding: 10px 15px;
        border-radius: 8px;
        border: 1px solid #ccc;
        font-size: 16px;
        background-color: #ffffff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        height: 40px;
        box-sizing: border-box;
    }

    .project-dropdown:focus {
        outline: none;
        border-color: #1976d2;
        box-shadow: 0 0 5px rgba(25, 118, 210, 0.5);
    }

    .project-date .mud-input-root {
        flex: 1;
        max-width: 400px;
        padding: 5px 15px;
        border-radius: 8px;
        border: 1px solid #ccc;
        font-size: 16px;
        background-color: #ffffff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        height: 40px;
        box-sizing: border-box;
    }

    .project-date .mud-input-root:focus-within {
        outline: none;
        border-color: #1976d2;
        box-shadow: 0 0 5px rgba(25, 118, 210, 0.5);
    }

    .project-search-button {
        flex: 0 0 100px;
        height: 40px;
        padding: 0 15px;
        box-sizing: border-box;
    }

    .custom-table table {
        width: 100%;
        border-collapse: collapse;
        table-layout: fixed;
    }

    .custom-table .table-header {
        background-color: #c7d59f;
        color: #212121;
        font-weight: bold;
        text-align: center;
        padding: 10px 6px;
        border: 1px solid black;
        word-wrap: break-word;
        font-size: 16px;
    }

    .custom-table .table-cell {
        text-align: center;
        font-size: 1rem;
        padding: 8px 4px;
        border: 1px solid black;
        word-wrap: break-word;
    }

    .custom-table tbody tr:hover {
        background-color: rgba(25, 118, 210, 0.1);
        cursor: pointer;
    }

    .custom-table tbody tr:nth-of-type(odd) {
        background-color: #f8f9fa;
    }
</style>

<MudPaper Class="project-container" Elevation="6">
    <MudText Typo="Typo.h5" Class="project-heading mb-3">Your Projects</MudText>

    @if (developerProjects != null && developerProjects.Any())
    {
        <MudCard Class="project-grid">
            <select class="project-dropdown" @bind="selectedProjectId">
                <option value="">Select Project</option>
                @foreach (var project in developerProjects)
                {
                    <option value="@project.Id">@project.Name</option>
                }
            </select>

            <MudTextField T="string" @bind-Value="selectedDateString"
                          Placeholder="yyyy-MM-dd"
                          Class="project-date"
                          Variant="Variant.Outlined" />

            <MudButton Variant="Variant.Filled" Class="btn btn-success project-search-button"
                       OnClick="@SearchByDate">
                Search
            </MudButton>
        </MudCard>
    }
    else
    {
        <MudText Class="Not-Found">No projects available. Please contact the Admin</MudText>
    }

    @if (timesheets?.Any() == true)
    {
        <MudTable T="TaskItemReadDto" Items="@timesheets" Hover="true" Bordered="true" Striped="true" Class="custom-table">
            <HeaderContent>
                <MudTh class="table-header">Project</MudTh>
                <MudTh class="table-header">TaskItem</MudTh>
                <MudTh class="table-header">Date</MudTh>
                <MudTh class="table-header">ApprovalStatus</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd class="table-cell">@selectedProject.Name</MudTd>
                <MudTd class="table-cell">@context.Title</MudTd>
                <MudTd class="table-cell">@context.Date?.ToString("yyyy-MM-dd")</MudTd>
                <MudTd class="table-cell">
                    @if (context.isApproved)
                    {
                        <MudIcon>✅</MudIcon>
                    }
                    else
                    {
                        <MudIcon>❌</MudIcon>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    }
</MudPaper>

@code {
    [Parameter] public int? DeveloperId { get; set; }

    private List<ProjectReadDto> developerProjects = new();
    private int? selectedProjectId;
    private ProjectReadDto selectedProject;
    private List<TaskItemReadDto> timesheets;

    private string selectedDateString;

    protected override async Task OnInitializedAsync()
    {
        if (DeveloperId == null)
        {
            var id = await JS.InvokeAsync<string>("localStorage.getItem", "DeveloperId");
            if (!string.IsNullOrEmpty(id) && int.TryParse(id, out int developerid))
                DeveloperId = developerid;
            else
                NavManager.NavigateTo("/login");
        }

        if (DeveloperId != null)
        {
            developerProjects = await Http.GetFromJsonAsync<List<ProjectReadDto>>(
                $"https://localhost:7152/api/Project/developer/{DeveloperId}");
        }
    }

    private async Task SearchByDate()
    {
        if (selectedProjectId == null || string.IsNullOrEmpty(selectedDateString))
        {
            timesheets = null;
            return;
        }

        if (!DateTime.TryParse(selectedDateString, out DateTime selectedDate))
        {
            timesheets = null;
            return;
        }

        var projectTasks = await Http.GetFromJsonAsync<List<TaskItemReadDto>>(
            $"https://localhost:7152/api/TaskItem/projectId/{selectedProjectId}");

        timesheets = projectTasks
            .Where(t => t.Date.HasValue && t.Date.Value.Date == selectedDate.Date)
            .ToList();

        selectedProject = developerProjects.FirstOrDefault(p => p.Id == selectedProjectId);

        StateHasChanged();
    }
}