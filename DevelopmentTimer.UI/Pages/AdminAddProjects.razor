@page "/admin/projects/addprojects"
@inject NavigationManager NavManager
@inject HttpClient Http
@layout AdminSidebar
@using DevelopmentTimer.DAL.Enums
@using MudBlazor
@using DevelopmentTimer.BAL.DTOs.ProjectDTO

<style>
    .form-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding-top: 50px;
        min-height: 85vh;
        background: #f5f6fa;
        overflow: visible !important
    }

    .form-card {
        padding: 25px;
        width: 360px;
        border-radius: 12px;
        background: white;
        box-shadow: 0px 4px 12px rgba(0,0,0,0.1);
        overflow: visible !important
    }

    .form-title {
        margin-bottom: 20px;
        color: #263D42;
        font-weight: 600;
        font-size: 22px;
        text-align: center;
    }

    .form-label {
        font-weight: 500;
        color: #263D42;
        margin-bottom: 5px;
        display: block;
        font-size: 14px;
    }

    .form-input {
        border: 1px solid black;
        border-radius: 6px;
        padding: 6px 10px;
        font-size: 14px;
        width: 100%;
        box-sizing: border-box;
    }

    .form-input-select {
        background-color: white;
        font-size: 14px;
    }

    .custom-select {
        width: 100%;
        padding: 0.5rem;
        border-radius: 4px;
        border: 1px solid #ccc;
        font-size: 1rem;
        background-color: #fff;
        color: #333;
    }

    .custom-select option {
        padding: 0.5rem;
    }


    /* .custom-select .mud-input-adornment {
        display: flex !important;
        align-items: center !important;
        justify-content: flex-end !important;
    }

    .custom-select svg {
        width: 28px !important;
        height: 30px !important;
        fill: #555 !important;
        margin-top: 0px !important;
    }

    .mud-popover {
        z-index: 9999 !important;
        overflow: visible !important;
    } */

</style>

<MudContainer Class="form-container">
    <MudPaper Class="form-card" Elevation="12">
        <MudText Typo="Typo.h6" Class="form-title">
            Create Project
        </MudText>

        <EditForm Model="@project" OnSubmit="@CreateProject">
            <DataAnnotationsValidator />

            <MudStack Spacing="2">

                <MudText Class="form-label">Project Name</MudText>
                <MudTextField T="string" @bind-Value="project.Name" Variant="Variant.Outlined" Size="Size.Small" FullWidth="true" Class="form-input" />

                <MudText Class="form-label">Max Hours / Day</MudText>
                <MudTextField T="int" @bind-Value="project.MaxHoursPerDay" Variant="Variant.Outlined" Size="Size.Small" FullWidth="true" Class="form-input" />

                <MudText Class="form-label">Status</MudText>
                <select class="custom-select" @onchange="OnStatusChanged">
                    @foreach (var status in Enum.GetValues<Status>())
                    {
                        <option value="@status">@status</option>
                    }
                </select>
                <MudButton Class="btn btn-success" Variant="Variant.Filled" OnClick="@CreateProject">
                    Save Project
                </MudButton>
            </MudStack>
        </EditForm>
    </MudPaper>
</MudContainer>

@code {
    private ProjectCreateDto project = new();
    private string? errorMessage;
    private string? statusString;

    private async Task CreateProject()
    {
        errorMessage = null;
        
        try
        {
            await Http.PostAsJsonAsync("https://localhost:7152/api/Project", project);
            NavManager.NavigateTo("/admin/projects", true);
        }
        catch (Exception ex)
        {
            errorMessage = $"Exception: {ex.Message}";
        }
    }
    private void OnStatusChanged(ChangeEventArgs e)
    {
        project.Status = Enum.Parse<Status>(e.Value.ToString());
    }
}




