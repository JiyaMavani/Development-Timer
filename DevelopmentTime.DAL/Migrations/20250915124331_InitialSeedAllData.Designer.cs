// <auto-generated />
using System;
using DevelopmentTimer.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevelopmentTimer.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250915124331_InitialSeedAllData")]
    partial class InitialSeedAllData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.ExtensionsRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraHours")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TaskItemId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("TaskItemId");

                    b.HasIndex("UserId");

                    b.ToTable("ExtensionRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeveloperId = 2,
                            ExtraHours = 2,
                            Justification = "Need more time to finalize design",
                            RequestDate = new DateTime(2025, 9, 15, 18, 13, 31, 108, DateTimeKind.Local).AddTicks(9465),
                            Status = 0,
                            TaskItemId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeveloperId = 3,
                            ExtraHours = 1,
                            Justification = "API dependencies delay",
                            RequestDate = new DateTime(2025, 9, 15, 18, 13, 31, 108, DateTimeKind.Local).AddTicks(9477),
                            Status = 0,
                            TaskItemId = 2
                        });
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxHoursPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxHoursPerDay = 8,
                            Name = "Project A",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            MaxHoursPerDay = 6,
                            Name = "Project B",
                            Status = 0
                        });
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedHours")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Design database schema",
                            DeveloperId = 2,
                            EstimatedHours = 4,
                            ProjectId = 1,
                            Status = 3,
                            Title = "Design DB"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Setup backend API",
                            DeveloperId = 3,
                            EstimatedHours = 6,
                            ProjectId = 1,
                            Status = 1,
                            Title = "API Setup"
                        });
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.TimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<decimal>("HoursWorked")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Submitted")
                        .HasColumnType("bit");

                    b.Property<int>("TaskItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalStatus = 0,
                            DeveloperId = 2,
                            HoursWorked = 2m,
                            Submitted = false,
                            TaskItemId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApprovalStatus = 0,
                            DeveloperId = 3,
                            HoursWorked = 3m,
                            Submitted = false,
                            TaskItemId = 2
                        });
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "Admin@123",
                            Role = 0,
                            Username = "Admin1"
                        },
                        new
                        {
                            Id = 2,
                            Password = "Dev@1234",
                            Role = 1,
                            Username = "Dev1"
                        },
                        new
                        {
                            Id = 3,
                            Password = "Dev@5678",
                            Role = 1,
                            Username = "Dev2"
                        });
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.ExtensionsRequest", b =>
                {
                    b.HasOne("DevelopmentTimer.DAL.Entities.User", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevelopmentTimer.DAL.Entities.TaskItem", "TaskItem")
                        .WithMany("ExtensionRequests")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevelopmentTimer.DAL.Entities.User", null)
                        .WithMany("ExtensionRequests")
                        .HasForeignKey("UserId");

                    b.Navigation("Developer");

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.TaskItem", b =>
                {
                    b.HasOne("DevelopmentTimer.DAL.Entities.User", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevelopmentTimer.DAL.Entities.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevelopmentTimer.DAL.Entities.User", null)
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");

                    b.Navigation("Developer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.TimeSheet", b =>
                {
                    b.HasOne("DevelopmentTimer.DAL.Entities.User", "Developer")
                        .WithMany("Timesheets")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevelopmentTimer.DAL.Entities.TaskItem", "TaskItem")
                        .WithMany("Timesheets")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.TaskItem", b =>
                {
                    b.Navigation("ExtensionRequests");

                    b.Navigation("Timesheets");
                });

            modelBuilder.Entity("DevelopmentTimer.DAL.Entities.User", b =>
                {
                    b.Navigation("ExtensionRequests");

                    b.Navigation("Tasks");

                    b.Navigation("Timesheets");
                });
#pragma warning restore 612, 618
        }
    }
}
